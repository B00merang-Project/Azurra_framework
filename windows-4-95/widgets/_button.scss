@mixin normal_buttons($bg : $bg_color, $fg : $fg_color, $br : $border_color) {
  padding: 4px 8px;
  border-style: solid;
  border-width: 1px;
  border-radius: $button_radius;
  color: $fg;
  border-color: $br;
  border-top-color: gtkmix($bg, $light_shadow, 0.7);
  border-left-color: gtkmix($bg, $light_shadow, 0.7);
  background-color: $bg;
  box-shadow: inset -1px 0 gtkshade($bg, 0.65),
              inset 0 -1px gtkshade($bg, 0.65),
              inset 1px 0 gtkmix($bg, $light_shadow, 0.7),
              inset 0 1px gtkmix($bg, $light_shadow, 0.7);
  outline-color: $fg;
  outline-offset: 0;
  outline-style: solid;

  // TODO: implement hover state

  &:active, &:checked {
    color: $fg;
    border-color: $br;
    background-color: $bg;
    background-image: none;
    box-shadow: inset 1px 0 gtkshade($bg, 0.65),
                inset 0 1px gtkshade($bg, 0.65),
                inset -1px 0 gtkmix($bg, $light_shadow, 0.7),
                inset 0 -1px gtkmix($bg, $light_shadow, 0.7);

    &:disabled {
      color: gtkmix($fg, $backdrop_disabled_fg_color, 0.1);
      border-color: gtkmix($fg, $disabled_bg_color, 0.85);
      background-color: gtkshade($disabled_bg_color, 0.9);
    }
  }

  &:disabled { color: gtkmix($fg, $backdrop_disabled_fg_color, 0.5); }
}

@mixin flat_buttons($bg : $bg_color, $fg : $fg_color, $br : $border_color) {
  border-color: transparent;
  border-radius: $button_radius;
  color: $fg;
  box-shadow: none;
  background-color: transparent;

  &:hover {
    color: $fg;
    border-color: $br;
    background-color: $bg;
    border-top-color: gtkmix($bg, $light_shadow, 0.7);
    border-left-color: gtkmix($bg, $light_shadow, 0.7);
    box-shadow: inset -1px 0 gtkshade($bg, 0.65),
                inset 0 -1px gtkshade($bg, 0.65),
                inset 1px 0 gtkmix($bg, $light_shadow, 0.7),
                inset 0 1px gtkmix($bg, $light_shadow, 0.7);
  }

  &:active, &:checked {
    color: $fg;
    border-color: $br;
    background-color: $bg;
    background-image: none;
    box-shadow: inset 1px 0 gtkshade($bg, 0.65),
                inset 0 1px gtkshade($bg, 0.65),
                inset -1px 0 gtkmix($bg, $light_shadow, 0.7),
                inset 0 -1px gtkmix($bg, $light_shadow, 0.7);
  }

  &:disabled {
    border-color: transparent;
    color: gtkalpha($fg, 0.8);
    background-color: transparent;
  }
}

@mixin destructive_button() {
  button.destructive-action {
    border-width: 1px;
    border-style: solid;
    border-color: gtkmix($error_color, $fg_color, 0.2);
    border-radius: $button_radius;
    color: gtkmix($selected_fg_color, $error_color, 0.1);
    background-color: $error_color;

    &:hover {
      border-color: gtkmix($error_color, $fg_color, 0.3);
      background-color: gtkmix($error_color, $selected_fg_color, 0.2);
    }

    &:active {
      border-color: gtkmix($error_color, $fg_color, 0.3);
      background-color: gtkmix($error_color, $fg_color, 0.1);
    }

    &:backdrop {
      border-color: gtkmix($error_color, $backdrop_fg_color, 0.2);
      color: gtkmix($backdrop_selected_fg_color, $error_color, 0.1);
      background-color: gtkmix($error_color, $backdrop_bg_color, 0.3);
    }
  }
}

@mixin suggested_button() {
  button.suggested-action {
    box-shadow: 0 0 0 1px $border_color,
                inset -1px 0 gtkshade($bg_color, 0.65),
                inset 0 -1px gtkshade($bg_color, 0.65),
                inset 1px 0 gtkmix($bg_color, $light_shadow, 0.7),
                inset 0 1px gtkmix($bg_color, $light_shadow, 0.7);
    
    &:active {
      box-shadow: 0 0 0 1px $border_color,
                  inset 1px 0 gtkshade($bg_color, 0.65),
                  inset 0 1px gtkshade($bg_color, 0.65),
                  inset -1px 0 gtkmix($bg_color, $light_shadow, 0.7),
                  inset 0 -1px gtkmix($bg_color, $light_shadow, 0.7);
    }
  }
}
