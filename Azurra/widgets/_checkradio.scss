// added the ext part for when we need selected (or dark) assets
@mixin check($ext : "") {
  & {
    -gtk-icon-source: -gtk-scaled(url("assets/checkbox-unchecked" + $ext + ".png"), url("assets/checkbox-unchecked" + $ext + "-@2.png"));
    
    &:backdrop {
      -gtk-icon-source: -gtk-scaled(url("assets/checkbox-unchecked-unfocused" + $ext + ".png"), url("assets/checkbox-unchecked-unfocused" + $ext + "-@2.png"));
    }
    
    &:disabled {
      -gtk-icon-source: -gtk-scaled(url("assets/checkbox-unchecked-insensitive" + $ext + ".png"), url("assets/checkbox-unchecked-insensitive" + $ext + "-@2.png"));
      
      &:backdrop {
        -gtk-icon-source: -gtk-scaled(url("assets/checkbox-unchecked-insensitive-unfocused" + $ext + ".png"), url("assets/checkbox-unchecked-insensitive-unfocused" + $ext + "-@2.png"));
      }
    }
    
    &:active, &:checked {
      -gtk-icon-source: -gtk-scaled(url("assets/checkbox-checked" + $ext + ".png"), url("assets/checkbox-checked" + $ext + "-@2.png"));
      
      &:backdrop {
        -gtk-icon-source: -gtk-scaled(url("assets/checkbox-checked-unfocused" + $ext + ".png"), url("assets/checkbox-checked-unfocused" + $ext + "-@2.png"));
      }
      
      &:disabled {
        -gtk-icon-source: -gtk-scaled(url("assets/checkbox-checked-insensitive" + $ext + ".png"), url("assets/checkbox-checked-insensitive" + $ext + "-@2.png"));
        
        &:backdrop {
          -gtk-icon-source: -gtk-scaled(url("assets/checkbox-checked-insensitive-unfocused" + $ext + ".png"));
        }
      }
    }
    
    &:indeterminate {
      -gtk-icon-source: -gtk-scaled(url("assets/checkbox-mixed" + $ext + ".png"), url("assets/checkbox-mixed" + $ext + "-@2.png"));
      
      &:backdrop {
        -gtk-icon-source: -gtk-scaled(url("assets/checkbox-mixed-unfocused" + $ext + ".png"), url("assets/checkbox-mixed-unfocused" + $ext + "-@2.png"));
      }
      
      &:disabled {
        -gtk-icon-source: -gtk-scaled(url("assets/checkbox-mixed-insensitive" + $ext + ".png"), url("assets/checkbox-mixed-insensitive" + $ext + "-@2.png"));
        
        &:backdrop {
          -gtk-icon-source: -gtk-scaled(url("assets/checkbox-mixed-insensitive-unfocused" + $ext + ".png"), url("assets/checkbox-mixed-insensitive-unfocused" + $ext + "-@2.png"));
        }
      }
    }
  }
}

@mixin radio($ext : "") {
  & {
    -gtk-icon-source: -gtk-scaled(url("assets/radio-unchecked" + $ext + ".png"), url("assets/radio-unchecked" + $ext + "-@2.png"));
    
    &:backdrop {
      -gtk-icon-source: -gtk-scaled(url("assets/radio-unchecked-unfocused" + $ext + ".png"), url("assets/radio-unchecked-unfocused" + $ext + "-@2.png"));
    }

    &:disabled {
      -gtk-icon-source: -gtk-scaled(url("assets/radio-unchecked-insensitive" + $ext + ".png"), url("assets/radio-unchecked-insensitive" + $ext + "-@2.png"));
      
      &:backdrop {
        -gtk-icon-source: -gtk-scaled(url("assets/radio-unchecked-insensitive-unfocused" + $ext + ".png"), url("assets/radio-unchecked-insensitive-unfocused" + $ext + "-@2.png"));
      }
    }
    
    &:active, &:checked {
      -gtk-icon-source: -gtk-scaled(url("assets/radio-checked" + $ext + ".png"), url("assets/radio-checked" + $ext + "-@2.png"));
      
      &:backdrop {
        -gtk-icon-source: -gtk-scaled(url("assets/radio-checked-unfocused" + $ext + ".png"), url("assets/radio-checked-unfocused" + $ext + "-@2.png"));
      }
      
      &:disabled {
        -gtk-icon-source: -gtk-scaled(url("assets/radio-checked-insensitive" + $ext + ".png"), url("assets/radio-checked-insensitive" + $ext + "-@2.png"));
        
        &:backdrop {
          -gtk-icon-source: -gtk-scaled(url("assets/radio-checked-insensitive-unfocused" + $ext + ".png"), url("assets/radio-checked-insensitive-unfocused" + $ext + "-@2.png"));
        }
      }
    }
    
    &:indeterminate {
      -gtk-icon-source: -gtk-scaled(url("assets/radio-mixed" + $ext + ".png"), url("assets/radio-mixed" + $ext + "-@2.png"));
      
      &:backdrop {
        -gtk-icon-source: -gtk-scaled(url("assets/radio-mixed-unfocused" + $ext + ".png"), url("assets/radio-mixed-unfocused" + $ext + "-@2.png"));
      }
      
      &:disabled {
        -gtk-icon-source: -gtk-scaled(url("assets/radio-mixed-insensitive" + $ext + ".png"), url("assets/radio-mixed-insensitive" + $ext + "-@2.png"));
        
        &:backdrop {
          -gtk-icon-source: -gtk-scaled(url("assets/radio-mixed-insensitive-unfocused" + $ext + ".png"), url("assets/radio-mixed-insensitive-unfocused" + $ext + "-@2.png"));
        }
      }
    }
  }
}

@mixin checkradio() {
  checkbutton.text-button, radiobutton.text-button {
    padding: 4px;
    outline-offset: 0;
  }

  checkbutton {
    padding: 4px;
    
    &:hover, &:active:hover {
      padding: 4px;
      border-style: none;
      background-color: transparent;
    }
    &:selected {
      padding: 4px;
      border-style: none;
      background-color: transparent;
      &:focus {
        padding: 4px;
        border-style: none;
        background-color: transparent;
      }
    }
  }
  
  view.content-view check, .content-view.view check {
    background-color: transparent;
    &:active {
      background-color: transparent;
    }
  }

  view.content-view check {
    &:hover, &:disabled, &:selected {
      background-color: transparent;
    }
  }

  check, radio, check:disabled, radio:disabled {
    margin: 4px;
    border-style: none;
    background-color: transparent;
  }
  
  check, .check {
    @include check();
    
    row:selected check {
      @include check("-selected");
    }
  }
  
  radio, .radio {
    @include radio();
    
    row:selected radio {
      @include radio("-selected");
    }
  }
  
  menuitem {
    check, radio {
      min-height: 16px;
      min-width: 16px;
    }
    check {
      @include check();
      
      &:hover {
        @include check("-selected");
      }
    }
    
    radio {
      @include radio();
      
      &:hover {
        @include radio("-selected");
      }
    }
  }
}
