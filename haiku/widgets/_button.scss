@mixin normal_buttons($bg : $bg_color, $fg : $fg_color, $br : $border_color) {
  padding: 4px 9px;
  border-style: solid;
  border-width: 1px;
  border-radius: $button_radius;
  color: $fg;
  border-color: gtkshade($br, 0.55);
  background-color: gtkshade($bg, 1.08);
  background-image: linear-gradient(
    to bottom,
    gtkshade($bg, 1.1),
    gtkshade($bg, 1.08) 45%,
    gtkshade($bg, 1.04) 55%,
    gtkshade($bg, 0.999)
  );
  box-shadow: inset 1px 1px gtkshade($bg, 1.4), 
              inset -1px -1px gtkshade($bg, 0.65),
              0 0 0 1px gtkalpha($dark_shadow, 0.05),
              1px 1px gtkalpha($light_shadow, 0.5);

  outline-offset: 0;
  outline-width: 2px;
  outline-style: solid;
  outline-color: $selected_bg_color;

  // TODO: add hover state

  &:active, &:checked {
    background-color: gtkshade($bg, 0.9);
    background-image: none;
    box-shadow: inset -1px -1px gtkshade($bg, 1.4),
                inset 1px 1px gtkshade($bg, 0.65),
                0 0 0 1px gtkalpha($light_shadow, 0.5),
                1px 1px gtkalpha($dark_shadow, 0.05);

    &:disabled {
      color: gtkmix($fg, $backdrop_disabled_fg_color, 0.1);
      background-color: gtkshade($disabled_bg_color, 0.95);
    }
  }

  &:disabled {
    color: gtkmix($fg, $backdrop_disabled_fg_color, 0.5);
    background-color: $disabled_bg_color;
  }
}

@mixin flat_buttons($bg : $bg_color, $fg : $fg_color, $br : $border_color) {
  border-color: transparent;
  border-radius: $button_radius;
  color: $fg;
  background-image: none;
  background-color: transparent;
  box-shadow: none;

  &:hover {
    border-color: gtkshade($br, 0.55);
    color: $fg;
    background-color: gtkshade($bg, 1.08);
    box-shadow: inset 1px 1px gtkshade($bg, 1.4),
                inset -1px -1px gtkshade($bg, 0.65),
                0 0 0 1px gtkalpha($dark_shadow, 0.05),
                1px 1px gtkalpha($light_shadow, 0.5);
  }

  &:active, &:checked {
    background-image: none;
    background-color: gtkshade($bg, 0.9);
    box-shadow: inset -1px -1px gtkshade($bg, 1.4),
                inset 1px 1px gtkshade($bg, 0.65),
                0 0 0 1px gtkalpha($light_shadow, 0.5),
                1px 1px gtkalpha($dark_shadow, 0.05);

    &:backdrop { color: $backdrop_selected_fg_color; }
  }

  &:disabled {
    border-color: transparent;
    color: gtkalpha($fg, 0.8);
    background-color: transparent;
    
    &:backdrop {
      border-color: transparent;
      color: gtkalpha($fg, 0.7);
      background-color: transparent;
    }
  }

  &:backdrop {
    border-color: transparent;
    background-color: transparent;
    color: $backdrop_fg_color;
  }
}

@mixin destructive_button() {
  button.destructive-action {
    border-width: 1px;
    border-style: solid;
    border-color: gtkmix($error_color, $fg_color, 0.2);
    border-radius: $button_radius;
    color: gtkmix($selected_fg_color, $error_color, 0.1);
    background-color: $error_color;
    background-image: none;

    &:hover {
      border-color: gtkmix($error_color, $fg_color, 0.3);
      background-color: gtkmix($error_color, $selected_fg_color, 0.2);
    }

    &:active {
      border-color: gtkmix($error_color, $fg_color, 0.3);
      background-color: gtkmix($error_color, $fg_color, 0.1);
      background-image: none;
    }

    &:backdrop {
      border-color: gtkmix($error_color, $backdrop_fg_color, 0.2);
      color: gtkmix($backdrop_selected_fg_color, $error_color, 0.1);
      background-color: gtkmix($error_color, $backdrop_bg_color, 0.3);
    }
  }
}

@mixin suggested_button() {
  button.suggested-action {
    border-width: 1px;
    border-style: solid;
    border-radius: $button_radius;
    border-color: $selected_bg_color;
    color: $selected_fg_color;
    background-image: linear-gradient(
      to bottom,
      gtkshade($selected_bg_color, 1.25),
      gtkshade($selected_bg_color, 1.1)
    );

    &:hover {
      background-image: linear-gradient(
        to bottom,
        gtkshade($selected_bg_color, 1.35),
        gtkshade($selected_bg_color, 1.2)
      );
    }

    &:active, &:checked {
      background-image: linear-gradient(
        to bottom,
        gtkshade($selected_bg_color, 1.1),
        gtkshade($selected_bg_color, 0.95)
        );

      &:backdrop {
        color: $backdrop_selected_fg_color;
      }
    }

    &:disabled {
      border-color: gtkmix($selected_bg_color, $disabled_bg_color, 0.2);
      color: gtkmix($selected_fg_color, $disabled_fg_color, 0.2);
      background-image: linear-gradient(
        to bottom, 
        gtkshade(gtkmix($selected_bg_color, $disabled_bg_color, 0.2), 1.2),
        gtkshade(gtkmix($selected_bg_color, $disabled_bg_color, 0.2), 1.05)
      );

      &:backdrop {
        border-color: gtkmix($backdrop_selected_bg_color, $backdrop_disabled_bg_color, 0.2);
        color: gtkmix($backdrop_selected_fg_color, $backdrop_disabled_fg_color, 0.2);
        background-image: linear-gradient(
          to bottom,
          gtkshade(gtkmix($backdrop_selected_bg_color, $backdrop_disabled_bg_color, 0.2), 1.1),
          gtkshade(gtkmix($backdrop_selected_bg_color, $backdrop_disabled_bg_color, 0.2), 0.95)
        );        
      }
    }

    &:backdrop {
      border-color: $backdrop_selected_bg_color;
      color: $backdrop_selected_fg_color;
      background-image: linear-gradient(
        to bottom,
        gtkshade($selected_bg_color, 1.2),
        gtkshade($selected_bg_color, 1.05)
      );
    }
  }
}
