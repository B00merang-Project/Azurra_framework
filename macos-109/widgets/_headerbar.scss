// Is there a better way to make this override? Button state?
@mixin headerbutton() {
  padding: 4px 8px;
  border: 1px solid gtkshade($border_color, 0.7);
  border-radius: $button_radius;
  color: $headerbar_fg_color;
  border-color: gtkshade($border_color, 0.7);
  background-color: $headerbar_bg_color;
  background-image: linear-gradient(
    to top,
    gtkshade($base_color, 0.8),
    gtkshade($bg_color, 1.15)
  );
  box-shadow: 0 1px gtkalpha(white, 0.1);

  // TODO: hover state?

  &:active, &:checked {
    color: $selected_fg_color;
    border-color: gtkshade(gtkshade($border_color, 0.7), 0.8);
    background-color: gtkshade($headerbar_bg_color, 0.5);
    background-image: none;
    box-shadow: inset 0 2px 3px 1px gtkalpha(black, 0.45),
                inset 0 -2px 3px 1px gtkalpha(white, 0.45),
                inset 0 1px gtkshade($bg_color, 0.35);

    &:backdrop {
      color: $backdrop_fg_color;
      border-color: gtkshade($backdrop_bg_color, 0.85);
      background-color: gtkshade($backdrop_bg_color, 0.85);
      box-shadow: inset 0 2px 3px 1px gtkalpha(black, 0.25),
                  inset 0 1px gtkshade($bg_color, 0.55);
    }
    
    &:disabled {
      color: gtkmix($headerbar_fg_color, $backdrop_disabled_fg_color, 0.1);
      border-color: gtkmix($headerbar_fg_color, $disabled_bg_color, 0.85);
      background-color: gtkshade($disabled_bg_color, 0.9);
      
      &:backdrop {
        color: $backdrop_disabled_fg_color;
        border-color: $backdrop_border_color;
        background-color: gtkshade($backdrop_disabled_bg_color, 0.9);
      }
    }
  }

  &:disabled {
    color: gtkmix($headerbar_fg_color, $backdrop_disabled_fg_color, 0.5);
    
    &:backdrop {
      color: $backdrop_disabled_fg_color;
    }
  }

  &:backdrop {
    color: $backdrop_fg_color;
    border-color: $backdrop_border_color;
    background-image: linear-gradient(
      to top,
      gtkshade($backdrop_base_color, 0.95),
      gtkshade($backdrop_bg_color, 1.1)
    );
    background-color: $backdrop_base_color;
  }
}

@mixin headerbar($type) {
  @if $type == "base" {
    min-height: $headerbar_size;
    padding: 4px 8px;
    border-bottom: 1px solid gtkshade($titlebar_bg_color, 0.75);
    color: $titlebar_fg_color;
    background-color: $titlebar_bg_color;
    background-image: linear-gradient(
      to bottom,
      gtkshade($titlebar_bg_color, 0.95),
      gtkshade($titlebar_bg_color, 0.85)
    );
    box-shadow: none;

    button {
      @include headerbutton();
    }
  }

  @else if $type == "backdrop" {
    border-bottom-color: $backdrop_border_color;
    color: $backdrop_fg_color;
    background-color: $backdrop_bg_color;
    background-image: linear-gradient(
      to bottom,
      gtkshade($backdrop_bg_color, 1.05),
      gtkshade($backdrop_bg_color, 0.95)
    );
  }
}

@mixin titlebutton($type) {
  padding: 0px;
  min-width: 20px;
  min-height: 20px;
  border: none;
  color: transparent;
  box-shadow: none;
  background-color: transparent;
  background-size: 20px 20px;
  background-position: center;
  background-repeat: no-repeat;
  box-shadow: none;
  -gtk-icon-shadow: none;
  
  &:backdrop {
    opacity: 0.6;
  }
  
  @if $type == "close" {
    background: url('assets/close-normal.png');
    
    &:hover { background: url('assets/close-hover.png'); }
    &:active { background: url('assets/close-active.png'); }
    &:backdrop { background: url('assets/close-backdrop.png'); }
  }

  @else if $type == "minimize" {
    background: url('assets/minimize-normal.png');
    
    &:hover { background: url('assets/minimize-hover.png'); }
    &:active { background: url('assets/minimize-active.png'); }
    &:backdrop { background: url('assets/minimize-backdrop.png'); }
  }

  @else if $type == "maximize" {
    background: url('assets/maximize-normal.png');
    
    &:hover { background: url('assets/maximize-hover.png'); }
    &:active { background: url('assets/maximize-active.png'); }
    &:backdrop { background: url('assets/maximize-backdrop.png'); }
  }
}
