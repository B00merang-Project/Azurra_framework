// linked widgets
@mixin linked_widgets() {
  .linked {
    &, .inline-toolbar &, .primary-toolbar & {
      & button, & .raised button {
        border-radius: 0;
        border-left-width: 0;

        &:first-child {
          border-left-width: $button_border_width;
          border-top-left-radius: $button_radius;
          border-bottom-left-radius: $button_radius;
        }

        &:last-child {
          border-left-width: 0;
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
          border-top-right-radius: $button_radius;
          border-bottom-right-radius: $button_radius;
        }

        &:only-child {
          border-width: $button_border_width;
          border-radius: $button_radius;
        }
      }
      
      & entry {
        border-radius: 0;
        border-left-width: 0;

        &:first-child {
          border-left-width: $entry_border_width;
          border-top-left-radius: $entry_radius;
          border-bottom-left-radius: $entry_radius;
        }

        &:last-child {
          border-left-width: 0;
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
          border-top-right-radius: $entry_radius;
          border-bottom-right-radius: $entry_radius;
        }

        &:only-child {
          border-width: $entry_border_width;
          border-radius: $entry_radius;
        }
        
        &:focus, &:last-child:focus {
          // NOTE: parenthesis to cancel the arithmetic operation
          box-shadow: (-$entry_border_width) 0 $theme_selected_bg_color;
        }
          
        &:first-child:focus {
          box-shadow: none;
        }
      }

      & combobox {
        & box.linked button {
          border-radius: 0;
          border-left-width: 0;
        }

        &:first-child box.linked button {
          border-left-width: $button_border_width;
          border-top-left-radius: $button_radius;
          border-bottom-left-radius: $button_radius;
        }

        &:last-child box.linked button {
          border-left-width: 0;
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
          border-top-right-radius: $button_radius;
          border-bottom-right-radius: $button_radius;
        }

        &:only-child box.linked button {
          border-width: $button_border_width;
          border-radius: $button_radius;
        }
      }
    }
  }
    
  // vertical
  .vertical.linked {
    & button {
      border-left-width: $button_border_width;
      border-top-width: 0;
      border-radius: 0;

      &:first-child {
        border-top-width: $button_border_width;
        border-top-left-radius: $button_radius;
        border-top-right-radius: $button_radius;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }

      &:last-child {
        border-top-width: 0;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-bottom-left-radius: $button_radius;
        border-bottom-right-radius: $button_radius;
      }

      &:only-child {
        border-top-width: $button_border_width;
      }
    }
    
    & entry {
      border-left-width: $entry_border_width;
      border-top-width: 0;
      border-radius: 0;

      &:first-child {
        border-top-width: $entry_border_width;
        border-top-left-radius: $entry_radius;
        border-top-right-radius: $entry_radius;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }

      &:last-child {
        border-top-width: 0;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-bottom-left-radius: $entry_radius;
        border-bottom-right-radius: $entry_radius;
      }

      &:only-child {
        border-top-width: $entry_border_width;
      }
      
      &:focus, &:last-child:focus {
        // NOTE: parenthesis to cancel the arithmetic operation
        box-shadow: 0 (-$entry_border_width) $theme_selected_bg_color;
      }

      &:first-child:focus {
        box-shadow: none;
      }
    }

    & combobox {
      & box.linked button {
        border-left-width: $button_border_width;
        border-top-width: 0;
        border-radius: 0;
      }

      &:first-child box.linked button {
        border-top-width: $button_border_width;
        border-top-left-radius: $button_radius;
        border-top-right-radius: $button_radius;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }

      &:last-child box.linked button {
        border-top-width: 0;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-bottom-left-radius: $button_radius;
        border-bottom-right-radius: $button_radius;
      }

      &:only-child box.linked button {
        border-top-width: $button_border_width;
      }
    }
  }
  
  // stack switcher 
  stackswitcher button.text-button {
    min-width: 80px;
  }
}
