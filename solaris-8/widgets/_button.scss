@mixin normal_buttons($button_bg : $bg_color, $button_fg : $fg_color, $button_border : $border_color) {
  padding: 4px 8px;
  border-style: solid;
  border-width: 1px;
  border-radius: $button_radius;
  color: $button_fg;
  border-color: $button_border;
  border-top-color: gtkmix($button_bg, $light_shadow, 0.7);
  border-left-color: gtkmix($button_bg, $light_shadow, 0.7);
  background-color: $button_bg;
  
  // TODO: outline_color or mixin
  /*
  outline-color: $color_shadow;
  outline-width: 2px;
  outline-offset: 2px;
  outline-style: solid;
  */

  // TODO: implement hover state

  &:active, &:checked {
    color: $button_fg;
    border-top-color: $button_border;
    border-left-color: $button_border;
    border-bottom-color: gtkmix($button_bg, $light_shadow, 0.7);
    border-right-color: gtkmix($button_bg, $light_shadow, 0.7);
    background-color: gtkshade($button_bg, 0.9);
    background-image: none;

    &:disabled {
      color: gtkmix($button_fg, $backdrop_disabled_fg_color, 0.1);
      text-shadow: 1px 1px gtkalpha($light_shadow, 0.7);
      background-color: gtkshade($disabled_bg_color, 0.9);
    }
  }

  &:disabled {
    color: gtkmix($button_fg, $backdrop_disabled_fg_color, 0.5);
    text-shadow: 1px 1px gtkalpha($light_shadow, 0.85);   // override in labels.scss (what does this mean)
  }
}

@mixin flat_buttons($button_bg : $bg_color, $button_fg : $fg_color, $button_border : $border_color) {
  border-color: transparent;
  border-radius: $button_radius;
  color: $button_fg;
  box-shadow: none;
  background-color: transparent;

  &:hover {
    color: $button_fg;
    background-color: $button_bg;
    border-color: $button_border;
    border-top-color: gtkmix($button_bg, $light_shadow, 0.7);
    border-left-color: gtkmix($button_bg, $light_shadow, 0.7);
    background-color: $button_bg;
  }

  &:active, &:checked {
    color: $button_fg;
    border-top-color: $button_border;
    border-left-color: $button_border;
    border-bottom-color: gtkmix($button_bg, $light_shadow, 0.7);
    border-right-color: gtkmix($button_bg, $light_shadow, 0.7);
    background-color: gtkshade($button_bg, 0.9);
    background-image: none;

    &:disabled {
      color: gtkmix($button_fg, $backdrop_disabled_fg_color, 0.1);
      text-shadow: 1px 1px gtkalpha($light_shadow, 0.7);
      background-color: gtkshade($disabled_bg_color, 0.9);
    }
  }

  &:disabled {
    border-color: transparent;
    color: gtkalpha($button_fg, 0.8);
    text-shadow: 1px 1px gtkalpha($light_shadow, 0.7);
    background-color: transparent;
  }
}

@mixin destructive_button() {
  button.destructive-action {
    border-width: 1px;
    border-style: solid;
    border-color: gtkmix($error_color, $light_shadow, 0.4);
    border-right-color: gtkmix($error_color, $dark_shadow, 0.4);
    border-bottom-color: gtkmix($error_color, $dark_shadow, 0.4); 
    border-radius: $button_radius;
    color: gtkmix($selected_fg_color, $error_color, 0.1);
    background-color: $error_color;

    &:hover {
      background-color: gtkmix($error_color, $selected_fg_color, 0.2);
    }

    &:active {
      border-color: gtkmix($error_color, $light_shadow, 0.4);
      border-top-color: gtkmix($error_color, $dark_shadow, 0.4);
      border-right-color: gtkmix($error_color, $dark_shadow, 0.4);
      background-color: gtkmix($error_color, $fg_color, 0.1);
    }

    &:backdrop {
      color: gtkmix($backdrop_selected_fg_color, $error_color, 0.1);
      background-color: gtkmix($error_color, $backdrop_bg_color, 0.3);
    }
  }
}

@mixin suggested_button() {
  button.suggested-action {
    // TODO
  }
}
