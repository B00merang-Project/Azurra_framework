@mixin button($type, $_bg : $bg_color, $_fg : $fg_color) {
  $_border : gtkshade($selected_bg_color, 0.8);
  
  $_disabled_bg : gtkmix($_fg, $_bg, 0.95);
  $_disabled_fg : gtkmix($_fg, $_bg, 0.5);
  $_disabled_border : gtkshade($_border, 0.75);
  
  $_button_fill : linear-gradient(to top, #90acd0, #90acd0 1px, transparent 1px),
    
    // left inset shadow
    linear-gradient(to right, rgba(147, 175, 209, 0.75), rgba(147, 175, 209, 0.75) 1px,
      rgba(249, 251, 253, 0.45) 1px, rgba(249, 251, 253, 0.45) 2px, transparent 2px),
    
    // right inset shadow
    linear-gradient(to left, rgba(147, 175, 209, 0.75), rgba(147, 175, 209, 0.75) 1px,
      rgba(249, 251, 253, 0.45) 1px, rgba(249, 251, 253, 0.45) 2px, transparent 2px),
    
    // top inset shadow
    linear-gradient(to bottom, #d4dfed 1px, #f9fbfd 1px, #f9fbfd 2px, #f3f6fa 2px, #f3f6fa 3px, transparent 3px),
    
    // button fill
    linear-gradient(to top, #91add0 1px, #d0dceb 40%, #e3eaf3 45%, #e9eff6 50%, #f1f5f9 60%, #fdfdfe);
  
  @if $type == "base" {
    padding: 2px 6px;
    border-radius: $button_radius;
    border: 1px solid gtkmix(gtkshade($_border, 0.3), $selected_bg_color, 0.25);
    color: $_fg;
    background-color: $_bg;
    
    // TODO: get rid of hard-coded colors
    // bottom inset shadow
    background-image: $_button_fill;
    text-shadow: none;
    box-shadow: 0px 1px rgba(255, 255, 255, 0.6),
                1px 0px rgba(255, 255, 255, 0.2),
                0px -1px rgba(0, 0, 0, 0.04),
                -1px 0px rgba(0, 0, 0, 0.03);
    -gtk-icon-shadow: none;
  }

  @else if $type == "hover" {
    // TODO: use outline for focus instead
    &, &:focus {
      border-color: $_border;
      background-image: $_button_fill;
      box-shadow: inset 0 0 0 2px $color_shadow;
    }
  }

  @else if $type == "active"
  or $type == "checked" {
    border-color: $_border;
    background-color: gtkshade($_bg, 0.95);
    
    // TODO: replace with variable colors instead
    background-image: linear-gradient(to bottom, #d4dfed 1px, #6f94c2 1px, #6f94c2 2px, transparent 2px),
      linear-gradient(to right, #6f94c2 1px, transparent 1px),
      linear-gradient(to left, #6f94c2 1px, transparent 1px),
      linear-gradient(to top, #f9fbfd 1px, #f3f6fa 1px, #f3f6fa 2px, #fdfdfe 2px, #e3eaf3 50%, #91add0 95%);
  }
  
  @else if $type == "checked-disabled" {
    border-color: $_disabled_border;
    color: $_disabled_fg;
    background-color: gtkshade($_disabled_bg, 0.9);
  }

  @else if $type == "disabled" {
    border-color: $_disabled_border;
    color: $_disabled_fg;
    background-color: $disabled_bg_color;
  }
  
  @else if $type == "undecorated" {
    border-color: transparent;
    background-color: transparent;
    background-image: none;
    text-shadow: none;
    box-shadow: none;
    -gtk-icon-shadow: none;
  }
}
