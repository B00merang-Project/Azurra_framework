// TODO: use mixed colors instead of transparent
@mixin normal_buttons($button_bg : gtkalpha($fg_color, 0.2), $button_fg : $fg_color, $button_border : gtkalpha($fg_color, 0.2)) {
  padding: 4px 8px;
  border: none;
  border-radius: $button_radius;
  color: $button_fg;
  border-color: $button_border;
  background-color: $button_bg;
  
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0;

  // TODO: create a hover state?

  &:active, &:checked {
    outline-color: gtkshade($selected_bg_color, 1.4);
    color: $selected_fg_color;
    background-color: $selected_bg_color;

    &:disabled {
      color: gtkmix($selected_fg_color, $disabled_fg_color, 0.4);
      background-color: gtkmix($selected_bg_color, $disabled_bg_color, 0.5);
    
      &:backdrop {
        color: gtkmix($selected_fg_color, $backdrop_disabled_fg_color, 0.4);
        background-color: gtkmix($selected_bg_color, $backdrop_disabled_bg_color, 0.3);
      }
    }

    &:backdrop {
      color: $backdrop_selected_fg_color;
      background-color: $backdrop_selected_bg_color;
    }
  }

  &:disabled {
    color: gtkmix($button_fg, $backdrop_disabled_fg_color, 0.1);
    background-color: $disabled_bg_color;
    
    &:backdrop {
      color: $backdrop_disabled_fg_color;
      background-color: $backdrop_disabled_bg_color;
    }
  }

  &:backdrop {
    color: $backdrop_fg_color;
    background-color: $button_bg;
  }
}

@mixin flat_buttons($button_bg : gtkalpha($fg_color, 0.2), $button_fg : $fg_color, $button_border : gtkalpha($fg_color, 0.2)) {
  background-color: transparent;

  // TODO: create a hover state?

  &:active, &:checked {
    outline-color: gtkshade($selected_bg_color, 1.4);
    color: $selected_fg_color;
    background-color: $selected_bg_color;

    &:disabled {
      color: gtkmix($selected_fg_color, $disabled_fg_color, 0.4);
      background-color: gtkmix($selected_bg_color, $disabled_bg_color, 0.5);
    
      &:backdrop {
        color: gtkmix($selected_fg_color, $backdrop_disabled_fg_color, 0.4);
        background-color: gtkmix($selected_bg_color, $backdrop_disabled_bg_color, 0.3);
      }
    }

    &:backdrop { color: $backdrop_selected_fg_color; }
  }

  &:disabled {
    color: gtkmix($button_fg, $backdrop_disabled_fg_color, 0.1);
    
    &:backdrop { color: $backdrop_disabled_fg_color; }
  }
}

@mixin destructive_button() {
  button.destructive-action {
    border: none;
    border-radius: $button_radius;
    color: gtkmix($selected_fg_color, $error_color, 0.1);
    background-color: $error_color;

    &:hover {
      background-color: gtkmix($error_color, $selected_fg_color, 0.2);
    }

    &:active {
      background-color: gtkmix($error_color, $fg_color, 0.1);
    }

    &:backdrop {
      color: gtkmix($backdrop_selected_fg_color, $error_color, 0.1);
      background-color: gtkmix($error_color, $backdrop_bg_color, 0.3);
    }
  }
}

@mixin suggested_button() {
  button.suggested-action {
    border: none;
    color: $selected_fg_color;
    background-color: $selected_bg_color;
    
    &:hover {
      background-color: gtkshade($selected_bg_color, 1.05);
    }

    &:active, &:checked {
      background-color: gtkshade($selected_bg_color, 0.95);

      &:backdrop {
        background-color: gtkshade($backdrop_selected_bg_color, 0.95);
      }
    }

    &:disabled {
      color: gtkmix($selected_fg_color, $disabled_fg_color, 0.2);
      background-color: gtkmix($selected_bg_color, $disabled_bg_color, 0.2);

      &:backdrop {
        color: gtkmix($backdrop_selected_fg_color, $backdrop_disabled_fg_color, 0.2);
        background-color: gtkmix($backdrop_selected_bg_color, $backdrop_disabled_bg_color, 0.2);
      }
    }

    &:backdrop {
      color: $backdrop_selected_fg_color;
      background-color: $backdrop_selected_bg_color;
    }
  }
}
